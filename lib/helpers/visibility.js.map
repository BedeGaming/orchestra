{"version":3,"sources":["helpers/visibility.js"],"names":[],"mappings":";;;AAGA,YAAY,CAAC;;;;;;;;;;;;;;;;;;;;AAIb,IAAM,OAAO,GAAG,mBAAM,OAAO,CAAC,MAAM,CAAC,CAAC;;IAEhC,UAAU;AACd,WADI,UAAU,GACA;;;0BADV,UAAU;;AAEZ,QAAM,OAAO,GAAG,IAAI,CAAC,aAAa,EAAE,CAAC;;AAErC,QAAI,OAAO,EAAE;AACX,UAAM,OAAO,GAAG,OAAO,CAAC,OAAO,CAAC,YAAY,EAAE,EAAE,CAAC,GAAG,kBAAkB,CAAC;AACvE,4BAAE,QAAQ,CAAC,CAAC,EAAE,CAAC,OAAO,EAAE,YAAM;AAC5B,YAAI,MAAK,QAAQ,EAAE,EAAE;AACnB,iBAAO,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC;SAC9B,MAAM;AACL,iBAAO,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC;SAC/B;OACF,CAAC,CAAC;KACJ;GACF;;eAdG,UAAU;;oCAgBE;AACd,UAAM,QAAQ,GAAG,CAAC,QAAQ,EAAE,KAAK,EAAE,IAAI,EAAE,GAAG,CAAC;;;AAAC,AAG9C,UAAI,QAAQ,IAAI,QAAQ,EAAE;AACxB,eAAO,QAAQ,CAAC;OACjB;;;AAAA,AAGD,WAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AACxC,YAAI,AAAC,QAAQ,CAAC,CAAC,CAAC,GAAG,QAAQ,IAAK,QAAQ,EAAE;AACxC,iBAAO,QAAQ,CAAC,CAAC,CAAC,GAAG,QAAQ,CAAC;SAC/B;OACF;;;AAAA,AAGD,aAAO,IAAI,CAAC;KACb;;;+BAEU;AACT,UAAM,IAAI,GAAG,IAAI,CAAC,aAAa,EAAE,CAAC;AAClC,UAAI,CAAC,IAAI,EAAE;AACT,eAAO,KAAK,CAAC;OACd;;AAED,aAAO,QAAQ,CAAC,IAAI,CAAC,CAAC;KACvB;;;SA1CG,UAAU;;;kBA6CD,IAAI,UAAU,EAAE","file":"helpers/visibility.js","sourcesContent":["//\n// expose device capibilities to app object.\n//\n'use strict';\n\nimport $ from 'jquery';\nimport Radio from 'backbone.radio';\nconst channel = Radio.channel('main');\n\nclass Visibility {\n  constructor() {\n    const visProp = this.getHiddenProp();\n\n    if (visProp) {\n      const evtname = visProp.replace(/[H|h]idden/, '') + 'visibilitychange';\n      $(document).on(evtname, () => {\n        if (this.isHidden()) {\n          channel.request('appHidden');\n        } else {\n          channel.request('appShowing');\n        }\n      });\n    }\n  }\n\n  getHiddenProp() {\n    const prefixes = ['webkit', 'moz', 'ms', 'o'];\n\n    // if 'hidden' is natively supported just return it\n    if ('hidden' in document) {\n      return 'hidden';\n    }\n\n    // otherwise loop over all the known prefixes until we find one\n    for (let i = 0; i < prefixes.length; i++) {\n      if ((prefixes[i] + 'Hidden') in document) {\n        return prefixes[i] + 'Hidden';\n      }\n    }\n\n    // otherwise it's not supported\n    return null;\n  }\n\n  isHidden() {\n    const prop = this.getHiddenProp();\n    if (!prop) {\n      return false;\n    }\n\n    return document[prop];\n  }\n}\n\nexport default new Visibility();\n"],"sourceRoot":"/source/"}