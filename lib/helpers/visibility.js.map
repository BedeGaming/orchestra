{"version":3,"sources":["helpers/visibility.js"],"names":[],"mappings":";;;AAGA;;;;;;;;AAEA;;;;AACA;;;;;;;;AACA,IAAM,UAAU,mBAAM,OAAN,CAAc,MAAd,CAAV;;IAEA;AACJ,WADI,UACJ,GAAc;;;0BADV,YACU;;AACZ,QAAM,UAAU,KAAK,aAAL,EAAV,CADM;;AAGZ,QAAI,OAAJ,EAAa;AACX,UAAM,UAAU,QAAQ,OAAR,CAAgB,YAAhB,EAA8B,EAA9B,IAAoC,kBAApC,CADL;AAEX,4BAAE,QAAF,EAAY,EAAZ,CAAe,OAAf,EAAwB,YAAM;AAC5B,YAAI,MAAK,QAAL,EAAJ,EAAqB;AACnB,kBAAQ,OAAR,CAAgB,WAAhB,EADmB;SAArB,MAEO;AACL,kBAAQ,OAAR,CAAgB,YAAhB,EADK;SAFP;OADsB,CAAxB,CAFW;KAAb;GAHF;;eADI;;oCAgBY;AACd,UAAM,WAAW,CAAC,QAAD,EAAW,KAAX,EAAkB,IAAlB,EAAwB,GAAxB,CAAX;;;AADQ,UAIV,YAAY,QAAZ,EAAsB;AACxB,eAAO,QAAP,CADwB;OAA1B;;;AAJc,WAST,IAAI,IAAI,CAAJ,EAAO,IAAI,SAAS,MAAT,EAAiB,GAArC,EAA0C;AACxC,YAAI,QAAC,CAAS,CAAT,IAAc,QAAd,IAA2B,QAA5B,EAAsC;AACxC,iBAAO,SAAS,CAAT,IAAc,QAAd,CADiC;SAA1C;OADF;;;AATc,aAgBP,IAAP,CAhBc;;;;+BAmBL;AACT,UAAM,OAAO,KAAK,aAAL,EAAP,CADG;AAET,UAAI,CAAC,IAAD,EAAO;AACT,eAAO,KAAP,CADS;OAAX;;AAIA,aAAO,SAAS,IAAT,CAAP,CANS;;;;SAnCP;;;kBA6CS,IAAI,UAAJ","file":"helpers/visibility.js","sourcesContent":["//\n// expose device capibilities to app object.\n//\n'use strict';\n\nimport $ from 'jquery';\nimport Radio from 'backbone.radio';\nconst channel = Radio.channel('main');\n\nclass Visibility {\n  constructor() {\n    const visProp = this.getHiddenProp();\n\n    if (visProp) {\n      const evtname = visProp.replace(/[H|h]idden/, '') + 'visibilitychange';\n      $(document).on(evtname, () => {\n        if (this.isHidden()) {\n          channel.request('appHidden');\n        } else {\n          channel.request('appShowing');\n        }\n      });\n    }\n  }\n\n  getHiddenProp() {\n    const prefixes = ['webkit', 'moz', 'ms', 'o'];\n\n    // if 'hidden' is natively supported just return it\n    if ('hidden' in document) {\n      return 'hidden';\n    }\n\n    // otherwise loop over all the known prefixes until we find one\n    for (let i = 0; i < prefixes.length; i++) {\n      if ((prefixes[i] + 'Hidden') in document) {\n        return prefixes[i] + 'Hidden';\n      }\n    }\n\n    // otherwise it's not supported\n    return null;\n  }\n\n  isHidden() {\n    const prop = this.getHiddenProp();\n    if (!prop) {\n      return false;\n    }\n\n    return document[prop];\n  }\n}\n\nexport default new Visibility();\n"],"sourceRoot":"/source/"}