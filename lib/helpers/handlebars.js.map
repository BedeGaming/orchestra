{"version":3,"sources":["helpers/handlebars.js"],"names":["handlebars","Handlebars","default","global","registerHelper","console","log","optionalValue","args","i18nKey","shift","pop","forEach","item","index","array","SafeString","translate","amount","decimals","parseFloat","parseInt","str","format"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;;;;;;kBAMe,UAASA,UAAT,EAAqB;AAAA;;AAElC,MAAIC,aAAa,kBAAGC,OAApB;;AAEA,MAAIC,OAAOH,UAAX,EAAuB;AACrBC,iBAAaE,OAAOH,UAApB;AACD;;AAED,MAAIA,UAAJ,EAAgB;AACdC,iBAAaD,UAAb;AACD;;AAED;AACA;AACA;;AAEAC,aAAWG,cAAX,CAA0B,OAA1B,EAAmC,yBAAiB;AAClDC,YAAQC,GAAR,CAAY,iBAAZ;AACAD,YAAQC,GAAR,CAAY,sBAAZ;AACAD,YAAQC,GAAR;;AAEA,QAAIC,aAAJ,EAAmB;AACjBF,cAAQC,GAAR,CAAY,OAAZ;AACAD,cAAQC,GAAR,CAAY,sBAAZ;AACAD,cAAQC,GAAR,CAAYC,aAAZ;AACD;AACF,GAVD;;AAYA;;;;;;;AAOAN,aAAWG,cAAX,CAA0B,WAA1B,EAAuC,YAAa;AAAA,sCAATI,IAAS;AAATA,UAAS;AAAA;;AAClD,QAAIC,UAAUD,KAAKE,KAAL,EAAd;;AAEA;AACAF,SAAKG,GAAL;;AAEAH,SAAKI,OAAL,CAAa,UAACC,IAAD,EAAOC,KAAP,EAAcC,KAAd,EAAwB;AACnC,UAAI,OAAOF,IAAP,KAAgB,UAApB,EAAgC;AAC9BE,cAAMD,KAAN,IAAeD,MAAf;AACD;AACF,KAJD;;AAMA,WAAO,IAAIZ,WAAWe,UAAf,CAA0B,oBAAWC,SAAX,CAAqBR,OAArB,EAA8BD,IAA9B,CAA1B,CAAP;AAED,GAdD;;AAgBAP,aAAWG,cAAX,CAA0B,UAA1B,EAAsC,UAACc,MAAD,EAASC,QAAT,EAAsB;AAC1DD,aAASE,WAAWF,MAAX,CAAT;;AAEA,QAAIC,QAAJ,EAAc;AACZA,iBAAWE,SAASF,QAAT,EAAmB,EAAnB,CAAX;AACD;;AAED,QAAIG,MAAM,mBAAeC,MAAf,CAAsBL,MAAtB,EAA8BC,QAA9B,CAAV;;AAEA,WAAO,IAAIlB,WAAWe,UAAf,CAA0BM,GAA1B,CAAP;AACD,GAVD;;AAYA,SAAOrB,UAAP;AACD,C;;AApED;;;;AACA;;;;AACA","file":"handlebars.js","sourcesContent":["//\n// ## helpers/handlebars\n//\n// Provides handlebars helpers\n//\n'use strict';\n\nimport HB from 'handlebars/runtime';\nimport translator from './translate';\nimport currencyHelper from './currency';\n\nexport default function(handlebars) {\n\n  let Handlebars = HB.default;\n\n  if (global.handlebars) {\n    Handlebars = global.handlebars;\n  }\n\n  if (handlebars) {\n    Handlebars = handlebars;\n  }\n\n  //\n  // place {{ debug }}\n  //\n\n  Handlebars.registerHelper('debug', optionalValue => {\n    console.log('Current Context');\n    console.log('====================');\n    console.log(this);\n\n    if (optionalValue) {\n      console.log('Value');\n      console.log('====================');\n      console.log(optionalValue);\n    }\n  });\n\n  /*\n   * call with {{translate \"i18n_key\" optional parmeters}}\n   * the options params are passed to sprintf and used\n   * with %s, %d etc\n   *\n   * full options here: https://github.com/alexei/sprintf.js\n   */\n  Handlebars.registerHelper('translate', (...args) => {\n    var i18nKey = args.shift();\n\n    // remove the options object\n    args.pop();\n\n    args.forEach((item, index, array) => {\n      if (typeof item === 'function') {\n        array[index] = item();\n      }\n    });\n\n    return new Handlebars.SafeString(translator.translate(i18nKey, args));\n\n  });\n\n  Handlebars.registerHelper('currency', (amount, decimals) => {\n    amount = parseFloat(amount);\n\n    if (decimals) {\n      decimals = parseInt(decimals, 10);\n    }\n\n    var str = currencyHelper.format(amount, decimals);\n\n    return new Handlebars.SafeString(str);\n  });\n\n  return Handlebars;\n}\n"]}