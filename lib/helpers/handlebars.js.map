{"version":3,"sources":["helpers/handlebars.js"],"names":[],"mappings":";;;;;AAKA;;;;;;kBAMe,UAAS,UAAT,EAAqB;;;AAElC,MAAI,aAAa,kBAAG,OAAH,CAFiB;;AAIlC,MAAI,OAAO,UAAP,EAAmB;AACrB,iBAAa,OAAO,UAAP,CADQ;GAAvB;;AAIA,MAAI,UAAJ,EAAgB;AACd,iBAAa,UAAb,CADc;GAAhB;;;;;;AARkC,YAgBlC,CAAW,cAAX,CAA0B,OAA1B,EAAmC,yBAAiB;AAClD,YAAQ,GAAR,CAAY,iBAAZ,EADkD;AAElD,YAAQ,GAAR,CAAY,sBAAZ,EAFkD;AAGlD,YAAQ,GAAR,QAHkD;;AAKlD,QAAI,aAAJ,EAAmB;AACjB,cAAQ,GAAR,CAAY,OAAZ,EADiB;AAEjB,cAAQ,GAAR,CAAY,sBAAZ,EAFiB;AAGjB,cAAQ,GAAR,CAAY,aAAZ,EAHiB;KAAnB;GALiC,CAAnC;;;;;;;;;AAhBkC,YAmClC,CAAW,cAAX,CAA0B,WAA1B,EAAuC,YAAa;sCAAT;;KAAS;;AAClD,QAAI,UAAU,KAAK,KAAL,EAAV;;;AAD8C,QAIlD,CAAK,GAAL,GAJkD;;AAMlD,SAAK,OAAL,CAAa,UAAC,IAAD,EAAO,KAAP,EAAc,KAAd,EAAwB;AACnC,UAAI,OAAO,IAAP,KAAgB,UAAhB,EAA4B;AAC9B,cAAM,KAAN,IAAe,MAAf,CAD8B;OAAhC;KADW,CAAb,CANkD;;AAYlD,WAAO,IAAI,WAAW,UAAX,CAAsB,oBAAW,SAAX,CAAqB,OAArB,EAA8B,IAA9B,CAA1B,CAAP,CAZkD;GAAb,CAAvC,CAnCkC;;AAmDlC,aAAW,cAAX,CAA0B,UAA1B,EAAsC,UAAC,MAAD,EAAS,QAAT,EAAsB;AAC1D,aAAS,WAAW,MAAX,CAAT,CAD0D;;AAG1D,QAAI,QAAJ,EAAc;AACZ,iBAAW,SAAS,QAAT,EAAmB,EAAnB,CAAX,CADY;KAAd;;AAIA,QAAI,MAAM,mBAAe,MAAf,CAAsB,MAAtB,EAA8B,QAA9B,CAAN,CAPsD;;AAS1D,WAAO,IAAI,WAAW,UAAX,CAAsB,GAA1B,CAAP,CAT0D;GAAtB,CAAtC,CAnDkC;;AA+DlC,SAAO,UAAP,CA/DkC;CAArB;;AAJf;;;;AACA;;;;AACA","file":"helpers/handlebars.js","sourcesContent":["//\n// ## helpers/handlebars\n//\n// Provides handlebars helpers\n//\n'use strict';\n\nimport HB from 'handlebars/runtime';\nimport translator from './translate';\nimport currencyHelper from './currency';\n\nexport default function(handlebars) {\n\n  let Handlebars = HB.default;\n\n  if (global.handlebars) {\n    Handlebars = global.handlebars;\n  }\n\n  if (handlebars) {\n    Handlebars = handlebars;\n  }\n\n  //\n  // place {{ debug }}\n  //\n\n  Handlebars.registerHelper('debug', optionalValue => {\n    console.log('Current Context');\n    console.log('====================');\n    console.log(this);\n\n    if (optionalValue) {\n      console.log('Value');\n      console.log('====================');\n      console.log(optionalValue);\n    }\n  });\n\n  /*\n   * call with {{translate \"i18n_key\" optional parmeters}}\n   * the options params are passed to sprintf and used\n   * with %s, %d etc\n   *\n   * full options here: https://github.com/alexei/sprintf.js\n   */\n  Handlebars.registerHelper('translate', (...args) => {\n    var i18nKey = args.shift();\n\n    // remove the options object\n    args.pop();\n\n    args.forEach((item, index, array) => {\n      if (typeof item === 'function') {\n        array[index] = item();\n      }\n    });\n\n    return new Handlebars.SafeString(translator.translate(i18nKey, args));\n\n  });\n\n  Handlebars.registerHelper('currency', (amount, decimals) => {\n    amount = parseFloat(amount);\n\n    if (decimals) {\n      decimals = parseInt(decimals, 10);\n    }\n\n    var str = currencyHelper.format(amount, decimals);\n\n    return new Handlebars.SafeString(str);\n  });\n\n  return Handlebars;\n}\n"],"sourceRoot":"/source/"}